import board
import busio
from soupsieve import match
import requests #basic Python library for REST API requests
import base64 #base64 encoding/decoding
import json #json formatting
import webbrowser #for auth
import os
import GoogleTest #module for music request
import time
from digitalio import DigitalInOut
from adafruit_pn532.spi import PN532_SPI
from spotipy.oauth2 import SpotifyClientCredentials
import asyncio
import datetime
import websockets


#global variable for string from GoogleTest
global request
global check   
albumArray = []
#sets up PN532's SPI configuration
spi = busio.SPI(board.SCK, board.MOSI, board.MISO)
cs_pin = DigitalInOut(board.D5)
pn532 = PN532_SPI(spi, cs_pin, debug=False)

#info on PN532's firmware version and revision
ic, ver, rev, support = pn532.firmware_version
print("Found PN532 with firmware version: {0}.{1}".format(ver, rev))

#Ensures PN532 recognizes MiFare style cards
pn532.SAM_configuration()
# 

async def determineURI():
    print('in RFID reader')
    URIDict = {
        "1409188206": "spotify:album:4PgleR09JVnm3zY1fW3XBA", #Bruno Mars - 24K Magic
        "63101233": "spotify:playlist:37i9dQZF1DZ06evO4kqwHC", #This is Foo Fighters Playlist
        "691031433": "spotify:album:5zi7WsKlIiUXv09tbGLKsE", #Tyler the Creator - IGOR
        "157441223": "spotify:album:2yI4m5Yu2tl8v0It5P9WVz", #Rex Orange County - Who Cares?
        "72491443": "spotify:album:5PrhnVNOKoJC2aLLfabxuB", #Surfaces - Pacifico
        "253341443": "spotify:album:6pwuKxMUkNg673KETsXPUV", #Kanye West - Kids See Ghosts
        "182951433": "spotify:album:5SxudoALxEAVh9l83kSebx", #Florence and the Machine - Ceremonials
        "1092411223": "spotify:album:76290XdXVF9rPzGdNRWdCh", #SZA - Ctrl
        "2351443": "spotify:album:2fYhqwDWXjbpjaIJPEfKFw", #Ariana Grande - thank u next
        "202141443": "Mic Request - Initiate Mic"
    }
    #beginning of executing program
    print("Waiting for RFID card...")
    while True:
        uniqueIdentifier = ""
        spotifyRequest = ""
        uid = pn532.read_passive_target(timeout=0.5)
        print(".", end="")
        if uid is None:
            continue
        else:
            for i in uid:
                uniqueIdentifier = uniqueIdentifier + str(i)
            print("")
            print("Found card with UID: ",uniqueIdentifier)
            if uniqueIdentifier == "202141443":
                GoogleTest.main()
                request = GoogleTest.request_string
                print("Music request is: ", request)
                spotifyRequest = request
            elif uniqueIdentifier not in URIDict.keys():
                print("UID: " + uniqueIdentifier + " not recognized.")
                spotifyRequest = "spotify:track:4cOdK2wGLETKBW3PvgPWqT"
            else:
                spotifyRequest = URIDict[uniqueIdentifier]
                print('URI is ' + spotifyRequest)
        return spotifyRequest

async def handler(websocket, path):
    while True:
        data = [
            {
                "spotifyURI": "hello"
            }
        ]
        print("in handler")
        spotifyRequest = await determineURI()
        data[0]["spotifyURI"] = spotifyRequest
        await websocket.send(json.dumps(data[0]))
        await asyncio.sleep(10)
#     time.sleep(10)

start_server = websockets.serve(handler, "", 8888)

asyncio.get_event_loop().run_until_complete(start_server)
asyncio.get_event_loop().run_forever()
